---
AWSTemplateFormatVersion: '2010-09-09'
Description: Demo Custom CloudFormation Secret Provider
Parameters:
  ApiKey:
    Description: encrypted api key
    Type: String
    Default: ''
Conditions:
  ApiKeySpecified: !Not [!Equals [!Ref ApiKey, '']]

Resources:
  User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub '${AWS::StackName}-secret-user'

  AccessKey:
    Type: Custom::AccessKey
    Properties:
      UserName: !Sub '${AWS::StackName}-secret-user'
      ParameterPath: !Sub '/iam-users/${AWS::StackName}-secret-user'
      Serial: 1
      Status: Active
      ReturnSecret: true
      ReturnPassword: true
      NoEcho: False
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  DBPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/${AWS::StackName}/demo/PGPASSWORD'
      Alphabet: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_@#!
      RefreshOnUpdate: false
      Length: 30
      ReturnSecret: true
      Version: v2
      NoEcho: False
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  UserPassword:
    Type: Custom::Secret
    Properties:
      Name: !Sub '/iam-users/${AWS::StackName}-secret-user/password'
      Alphabet: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_@#!
      Required:
        - Alphabet: abcdefghijklmnopqrstuvwxyz
          Count: 1
        - Alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZ
          Count: 1
        - Alphabet: _@#!
          Count: 1
      RefreshOnUpdate: false
      Length: 30
      ReturnSecret: true
      Version: v1
      NoEcho: False
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  PrivateKey:
    Type: Custom::RSAKey
    Properties:
      Name: !Sub '/${AWS::StackName}/demo/private-key'
      Version: v1
      NoEcho: False
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  KeyPair:
    Type: Custom::KeyPair
    DependsOn: PrivateKey
    Properties:
      Name: !Sub '${AWS::StackName}-custom-key-pair'
      NoEcho: False
      PublicKeyMaterial: !GetAtt 'PrivateKey.PublicKey'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

  APIKey:
    Type: Custom::Secret
    Condition: ApiKeySpecified
    Properties:
      Name: !Sub '${AWS::StackName}-api-key'
      NoEcho: False
      Length: 10
      EncryptedContent: !Ref ApiKey
      RefreshOnUpdate: true
      ReturnSecret: true
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-secret-provider'

Outputs:
  Secret:
    Value: !GetAtt 'DBPassword.Secret'
    Description: the generated secret, do expose this as Output Parameter in production
  UserPassword:
      Value: !GetAtt 'UserPassword.Secret'
      Description: the generated user password, do expose this as Output Parameter in production
  Arn:
    Value: !GetAtt 'DBPassword.Arn'
    Description: ARN of the password in the Parameter Store
  PublicKey:
    Value: !GetAtt 'PrivateKey.PublicKey'
    Description: the public key, safe to expose
  PrivateKeyArn:
    Value: !GetAtt 'PrivateKey.Arn'
    Description: ARN of the private key in the Parameter Store

  SMTPPassword:
    Value: !GetAtt 'AccessKey.SMTPPassword'
    Description: SMTP password for the user

  AccessSecretKey:
    Value: !GetAtt 'AccessKey.SecretAccessKey'
    Description: access secret key for the user

  AccessSecretId:
    Value: !Ref 'AccessKey'
    Description: access secret id for the user

  ApiKey:
    Condition: ApiKeySpecified
    Description: api key in clear text
    Value: !GetAtt 'APIKey.Secret'
